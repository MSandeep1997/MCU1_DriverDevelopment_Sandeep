/*
 * stm32f407xx_spi_driver.h
 *
 *  Created on: 14-Feb-2021
 *      Author: sande
 */

#ifndef INC_STM32F407XX_SPI_DRIVER_H_
#define INC_STM32F407XX_SPI_DRIVER_H_

//#include"stm32f407xx.h"

typedef struct
{
	uint8_t SPI_DeviceMode;
	uint8_t SPI_BusConfig;
	uint8_t SPI_SclkSpeed;
	uint8_t SPI_DFF;
	uint8_t SPI_CPHA;
	uint8_t SPI_CPOL;
	uint8_t SPI_SSM;

}SPI_Config_t;
typedef struct
{
	SPI_RegDef_t *pSPIx;
	SPI_Config_t SPIConfig;

}SPI_Handle_t;

//SPI Define Mode
#define SPI_DEVICE_MODE_MASTER   1
#define SPI_DEVICE_MODE_SLAVE    0

//SPI BusConfig
#define SPI_BUS_CONFIG_FD                      1
#define SPI_BUS_CONFIG_HD                      2
#define SPI_BUS_CONFIG_SIMPLEX_RXONLY          3

//SPI SclkSpeed

#define SPI_SCLK_SPEED_DIV2        0
#define SPI_SCLK_SPEED_DIV4        1
#define SPI_SCLK_SPEED_DIV8        2
#define SPI_SCLK_SPEED_DIV16       3
#define SPI_SCLK_SPEED_DIV32       4
#define SPI_SCLK_SPEED_DIV64       5
#define SPI_SCLK_SPEED_DIV128      6
#define SPI_SCLK_SPEED_DIV256      7


//SPI DataFrame Format
#define SPI_DFF_8BITS                   0
#define SPI_DFF_16BITS                  1

//CPOL
#define SPI_CPOL_HIGH              1
#define SPI_CPOL_LOW               0

//CPHA
#define SPI_CPHA_HIGH              1
#define SPI_CPHA_LOW               0

//Software Slave Management

#define SPI_SSM_EN                1
#define SPI_SSM_DI                0

/*
 * Masking Information of the SPI_SR FLAGs
 */

#define SPI_TXE_FLAG        (1 << SPI_SR_TXE)
#define SPI_RXNE_FLAG       (1 << SPI_SR_RXNE)
#define SPI_BUSY_FLAG       (1 << SPI_SR_BSY)
/*
 ****************************************************************************************************************************
 *                                               API Supported by this driver
 *                                 For more information about API see the Function Definition
 *******************************************************************************************************************************
 */

// SPI clock configuration

void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi);

// SPI Initialization and Deinitialization

void SPI_Init(SPI_Handle_t *pSPIHandle);
void SPI_DeInit(SPI_RegDef_t *pSPIx);

// SPI send and receive data

void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uint32_t len);
void SPI_ReceiveData(SPI_RegDef_t *pSPIx, uint8_t *pRxBuffer, uint32_t len);


// SPI interrupt configuratiion and handling

void SPI_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi);
void SPI_IRQInterruptPriority(uint8_t IRQNumber, uint8_t IRQPriority);
void SPI_IRQHandle(SPI_Handle_t *pSPIx);


// Other SPI management APIs



#endif /* INC_STM32F407XX_SPI_DRIVER_H_ */
