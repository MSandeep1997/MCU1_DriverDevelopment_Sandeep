#ifndef stm32f407xx_gpio_driver.h

#include"stm32f407xx.h"
/*
 * This is a pin configuration for the GPIO
 */
typedef struct
{
	uint8_t GPIO_PinNumber;                /*Possible values from @GPIO_PinNumber*/
	uint8_t GPIO_PinMode;                  /*Possible values from @GPIO_MODES*/
	uint8_t GPIO_PinSpeed;                 /*Possible values from @GPIO_PUPD*/
	uint8_t GPIO_PinPuPdControl;           /*Possible values from @GPIO_SPEED*/
	uint8_t GPIO_PinOPType;                /*Possible values from @GPIO_OPType*/
	uint8_t GPIO_PinAltFunMode;
}GPIO_PinConfig_t;
/*
 * this is a handle structure for GPIO pin
 */

typedef struct
{
	GPIO_RegDef_t *pGPIOx;               /*This holds the base address of the GPIO ports to which the pin belong*/
	GPIO_PinConfig_t GPIO_PinConfig;     /*This holds GPIO pin configuration settings*/

}GPIO_Handle_t;

/*Different Pins of GPIO
 *@GPIO_PinNumber
 */

#define GPIO_PIN_NO_0      0
#define GPIO_PIN_NO_1      1
#define GPIO_PIN_NO_2      2
#define GPIO_PIN_NO_3      3
#define GPIO_PIN_NO_4      4
#define GPIO_PIN_NO_5      5
#define GPIO_PIN_NO_6      6
#define GPIO_PIN_NO_7      7
#define GPIO_PIN_NO_8      8
#define GPIO_PIN_NO_9      9
#define GPIO_PIN_NO_10     10
#define GPIO_PIN_NO_11     11
#define GPIO_PIN_NO_12     12
#define GPIO_PIN_NO_13     13
#define GPIO_PIN_NO_14     14
#define GPIO_PIN_NO_15     15

/*Different modes of the GPIO
 * @GPIO_MODES
 */

#define GPIO_MODE_IN       0
#define GPIO_MODE_OUT      1
#define GPIO_MODE_ALTFN    2
#define GPIO_MODE_ANALOG   3
#define GPIO_MODE_IT_RT    4
#define GPIO_MODE_IT_FT    5
#define GPIO_MODE_IT_RFT   6

/*GPIO Output type
 * @GPIO_OPType
 */

#define GPIO_OP_TYPE_PP    0
#define GPIO_OP_TYPE_OD    1

/*GPIO output speed
 * @GPIO_SPEED
 */

#define GPIO_SPEED_LOW        0
#define GPIO_SPEED_MEDIUM     1
#define GPIO_SPEED_FAST       2
#define GPIO_SPEED_HIGH       3

/*GPIO Pull Up Pull Down settings
 * @GPIO_PUPD
 */
#define GPIO_NO_PUPD       0
#define GPIO_PIN_PU        1
#define GPIO_PIN_PD        2

/*********************************************************************************************************************
 *                                           API Supported by this driver
 *                          For more information about APIs check the function definition
 *********************************************************************************************************************/

/*
 * Peripheral clock setup
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi);

/*
 * Peripheral initialization and deinitialization
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle);
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx);

/*
 * Peripheral Read and Write
 */
uint8_t GPIO_ReadFrom_Pin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);
uint16_t GPIO_ReadFrom_Port(GPIO_RegDef_t *pGPIOx);
void GPIO_WriteTo_Pin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value);
void GPIO_WriteTo_Port(GPIO_RegDef_t *pGPIOx, uint8_t Value);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);

/*
 * Peripheral IRQ Configuration and ISR Handling
 */
void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t IRQPriority, uint8_t EnorDi);
void GPIO_IRQHandling(uint8_t PinNumber);
